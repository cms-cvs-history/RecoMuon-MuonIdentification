# -*-SH-*-
process TEST = {
  
  include "RecoMuon/MuonIdentification/data/muonIdProducerSequence.cff"
  # modify matching parameters
  replace muonsWithMatchInfo.maxAbsDx = 5
  replace muonsWithMatchInfo.maxAbsPullX = 5
  replace muonsWithMatchInfo.maxAbsDy = 9999
  replace muonsWithMatchInfo.maxAbsPullY = 9999
  # modify selection parameters
  replace muonsWithMatchInfo.minPt = 5
  replace muonsWithMatchInfo.minP = 5
  replace muonsWithMatchInfo.maxAbsEta = 2.5
  replace muonsWithMatchInfo.minNumberOfMatches = 2
      
  service = MessageLogger {
          untracked vstring destinations = {"cout"}
	  # untracked vstring categories   = {"MuonIdentification", "TrackAssociator"}
	  # untracked vstring categories   = { "TrackAssociator"}
	  untracked PSet cout = {
		      untracked string threshold = "INFO"
		      # untracked string threshold = "DEBUG"
		      # untracked PSet default = { untracked int32 limit = -1  }
			untracked PSet DEBUG   = { untracked int32 limit = 0 }
			untracked PSet MuonIdentification= { untracked int32 limit = -1 }
			untracked PSet TrackAssociator = { untracked int32 limit = -1 }
		      }
           untracked vstring debugModules = { "muonsWithMatchInfo" }
  }
  
  source = PoolSource {
     untracked vstring fileNames = {
       "file:/afs/cern.ch/user/d/dmytro/public/singlemu-1_2_0.root"
     }
     untracked int32 maxEvents = -1
     # untracked uint32 skipEvents = 150
  }
    
   
   module Out = PoolOutputModule 
     {
	untracked string fileName = "muons.root"
	untracked vstring outputCommands =
	          {
		  "drop *",
		  "keep *_muonsWithMatchInfo_*_*",
		  "keep *_g4SimHits_*_*",
		  "keep recoTracks_*_*_*",
		  "keep recoMuonss_*_*_*"
		  }
     }

    path p = { muonIdProducerSequence }
    endpath outpath = { Out }
}


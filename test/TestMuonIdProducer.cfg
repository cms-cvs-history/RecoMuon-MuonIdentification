# -*-SH-*-
process TEST = {
  
  include "RecoMuon/MuonIdentification/data/muonIdProducerSequence.cff"
  
  untracked PSet maxEvents = { 
     untracked int32 input = 100
  }
  
  service = MessageLogger {
          untracked vstring destinations = {"cout"}
	  # untracked vstring categories   = {"MuonIdentification", "TrackAssociator"}
	  # untracked vstring categories   = { "TrackAssociator"}
	  # untracked vstring categories   = {"MuonIdentification"}
	  untracked PSet cout = {
		        untracked string threshold = "INFO"
		        #untracked string threshold = "DEBUG"
			untracked PSet DEBUG   = { untracked int32 limit = 0 }
			untracked PSet MuonIdentification= { untracked int32 limit = -1 }
			untracked PSet TrackAssociator = { untracked int32 limit = -1 }
		      }
          untracked vstring debugModules = { "muons" }
  }
   untracked PSet options =
     {
       #   include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
        # untracked vstring Rethrow = {"ProductNotFound"}
     }
   
  source = PoolSource {
     untracked vstring fileNames = {
      "file:/pnfs/cms/WAX/resilient/ibloch/CRAB_output/MuID_samples_2_1/mumin_e_10_60_probev2__22.root"
     }
  }
 
   module Out = PoolOutputModule 
     {
	untracked string fileName = "/tmp/muonid.root"
	untracked vstring outputCommands =
	          {
		  "drop *",
		  "keep *_genParticleCandidates_*_*",
		  "keep recoTracks_*_*_*",
		  "keep recoMuons_*_*_*",
		  "keep *_*_*_TEST"
		  }
     }
    replace  muons.inputCollectionLabels = { generalTracks, muons, standAloneMuons:UpdatedAtVtx }
    replace  muons.inputCollectionTypes = { "inner tracks", "muons", "outer tracks" }

    path p = { muonIdProducerSequence }
    endpath outpath = { Out }
}


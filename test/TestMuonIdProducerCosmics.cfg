# -*-SH-*-
process TEST = {
  
  include "RecoMuon/MuonIdentification/data/muonIdProducerSequence.cff"
  include "RecoMuon/MuonIdentification/data/links.cfi"

  # include "RecoMuon/Configuration/data/RecoMuonCosmics.cff"
  # include "Configuration/GlobalRuns/data/ReconstructionGR.cff"
  # include "Configuration/StandardSequences/data/ReconstructionCosmics.cff"
  include "Configuration/GlobalRuns/data/ForceZeroTeslaField.cff"
  
  untracked PSet maxEvents = { 
     untracked int32 input = 100
  }
  
  service = MessageLogger {
          untracked vstring destinations = {"cout"}
	  # untracked vstring categories   = {"MuonIdentification", "TrackAssociator"}
	  # untracked vstring categories   = { "TrackAssociator"}
	  untracked vstring categories   = {"MuonIdentification"}
	  untracked PSet cout = {
		        #untracked string threshold = "INFO"
		        untracked string threshold = "DEBUG"
			untracked PSet DEBUG   = { untracked int32 limit = 0 }
			untracked PSet MuonIdentification= { untracked int32 limit = -1 }
			untracked PSet TrackAssociator = { untracked int32 limit = -1 }
		      }
          untracked vstring debugModules = { "muons" }
  }
   untracked PSet options =
     {
        include "FWCore/Framework/test/cmsExceptionsFatalOption.cff"
        # untracked vstring Rethrow = {"ProductNotFound"}
     }
   
  source = PoolSource {
     untracked vstring fileNames = {
      "file:/uscmst1b_scratch/lpc1/cms1/dmytro/tmp/cmsdata/20X/cruzet3_muonfiltered_1.root"
     }
  }
 
   module Out = PoolOutputModule 
     {
	untracked string fileName = "/uscmst1b_scratch/lpc1/cms1/dmytro/tmp/tmp/muonid.root"
	untracked vstring outputCommands =
	          {
		  "drop *",
		  "keep *_genParticleCandidates_*_*",
		  "keep recoTracks_*_*_*",
		  "keep recoTrackExtras_*_*_*",
		  "keep recoMuons_*_*_*",
		  "keep *_cscSegments_*_*",
		  "keep *_dt4DSegments_*_*",
		  "keep *_towerMaker_*_*",
		  "keep *_*_*_TEST"
		  }
     }
    path p = { globalMuonLinks, muons }

  replace muons.inputCollectionLabels = {ctfWithMaterialTracksP5, globalMuonLinks, cosmicMuons}
  replace muons.inputCollectionTypes = { "inner tracks","links", "outer tracks"}
  replace muons.fillIsolation = false
  replace muons.minPt = 0.
  replace muons.minP = 0.

 endpath outpath = { Out }
}

